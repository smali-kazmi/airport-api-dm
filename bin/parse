#!/usr/bin/env node


var csv = require("fast-csv");
var saveService = require("../services/save");
var header = null;
var Queue = require('mel-queue');
var q = new Queue();

var isQueueInit = false;

csv
 .fromPath("./bin/file.csv")
 .transform(function(data){
    if(!header) {
      header = data;
      data = null;
    } else {
      data = mapToHeader(header, data);
    }
    return data;
 })
 .on("data", function(data){
    q.add(function(queue){
      saveService
        .record(data)
        .then(function(saveData){
          console.log('Data is saved');
          queue.next();
        })
        .catch(function(error){
          console.log(error);
          queue.next();
        });
    });

    if(!isQueueInit) {
      q.run();
      isQueueInit = true;
    }
     
 })
 .on("end", function(){
     console.log("done");
 });

q.on('end', function() {
  console.log('Queue ended');
  process.exit();
});


var mapToHeader = function(header, data) {
  var obj = {};

  for(var x in header) {
    obj[header[x]] = data[x].trim() ? data[x] : null;
  }
  return obj;
};